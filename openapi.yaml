openapi: 3.0.0
info:
  title: SAB-API
  description: API for viewing and managing office, appointment and biokit information
  version: 0.2.0

servers:
  - url: http://sab-database.dev.esdc.online
    description: Development server

paths:
  /locations:
    get:
      tags:
        - Locations
      summary: Returns location data and nested biokits
      parameters:
        - in: query
          name: province
          schema:
            type: string
          description: The province with which you would like to query locations eg. Ontario, Quebec, British%20Columbia
        - in: query
          name: city
          schema:
            type: string
          description: The city with which you would like to query locations eg. Toronto, Ottawa, Montreal
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Locations"
    post:
      tags:
        - Locations
      summary: Creates a new location and then returns that location in the response
      requestBody:
        description: A location object to be inserted into the database
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Locations"
      responses:
        "200":
          description: Succesful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Locations"

  /locations/{locationId}:
    get:
      tags:
        - Locations
      summary: Returns a single location
      parameters:
        - in: path
          name: locationId
          schema:
            type: string
          required: true
          description: Object id of location to return
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Locations"
    put:
      tags:
        - Locations
      summary: Updates a location
      parameters:
        - in: path
          name: locationId
          schema:
            type: string
          required: true
          description: Object id of location to update then return
      requestBody:
        description: A location object to be inserted into the database
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Locations"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Locations"

  /locations/locationsByProv/{province}/{city}:
    get:
      tags:
        - Locations
      summary: Returns either array of cities (if province is passed) or array of locations (if province and city are passed)
      parameters:
        - in: path
          name: province
          schema:
            type: string
          required: true
          description: The province for which you would want returned a list of cities that have locations
        - in: path
          name: city
          schema:
            type: string
          required: true
          description: The city for which you would like to receive locations information
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/Locations"
                    - $ref: "#/components/schemas/Cities"

components:
  schemas:
    Locations:
      type: object
      properties:
        locationId:
          type: string
        locationName:
          type: string
        locationAddress:
          type: string
        locationCity:
          type: string
        postalCode:
          type: string
        locationProvince:
          type: string
        hours:
          type: string
        closures:
          type: array
          items:
            type: object
            properties:
              periodStart:
                type: string
                format: date-time
              periodEnd:
                type: string
                format: date-time
        bioKits:
          type: array
          items:
            $ref: "#/components/schemas/BioKits"

    BioKits:
      type: object
      properties:
        bioKitId:
          type: string
        accessible:
          type: boolean
        private:
          type: boolean
        available:
          type: boolean

    Appointments:
      type: object
      properties:
        appointmentId:
          type: string
        clientEmail:
          type: string
          format: email
        phoneNumber:
          type: number
        locationId:
          type: string
        bioKitId:
          type: string
        bil:
          type: string
        confirmation:
          type: string
        date:
          type: string
          format: date-time
        dateConfirmed:
          type: string
          format: date-time
        expires:
          type: string
          format: date-time
        maintenance:
          type: boolean
        cancelledByClient:
          type: boolean
        cancelledByLocation:
          type: boolean

    Cities:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        value:
          type: string
